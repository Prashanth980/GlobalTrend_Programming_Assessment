# -*- coding: utf-8 -*-
"""7.Decorator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aQ4Y0owp7UQyfTzGxJGkJIsyqNWh8UT1
"""

import time
import logging

logging.basicConfig(level=logging.INFO)

def measure_time(func):
    def wrapper(*args, **kwargs):
        start_time = time.perf_counter()
        result = func(*args, **kwargs)
        end_time = time.perf_counter()
        execution_time = end_time - start_time
        print(f"Function {func.__name__} executed in {execution_time:.4f} seconds")
        return result
    return wrapper

@measure_time
def compute_expensive_task():
    sum_result = 0
    for i in range(1000000):
        sum_result += i
    return sum_result

result = compute_expensive_task()
print("Execution complete. Result:", result)

